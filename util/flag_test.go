package util

import (
	"github.com/fogleman/gg"
	"github.com/stretchr/testify/assert"
	"testing"
)

func TestEncodeFlag(t *testing.T) {
	data := []byte("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")
	flag := EncodeFlag(data)
	gg.SavePNG("flag_test.png", flag)
}

func TestDecodeFlag(t *testing.T) {
	testString := "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"
	data := []byte(testString)
	flag := EncodeFlag(data)
	gg.SavePNG("flag_test.png", flag)
	resultData, _ := DecodeFlag(flag)
	assert.Equal(t, testString, string(resultData))
}

func TestEncodeNullFlag(t *testing.T) {
	data := []byte("")
	flag := EncodeFlag(data)
	gg.SavePNG("flag_test.png", flag)
}
